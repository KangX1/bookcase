#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2011 OpenFOAM Foundation
#    \\/     M anipulation  |
#-------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     foamNewFunctionObject
#
# Description
#     Create new standard OpenFOAM source file structure for a custom 
#     function object.
#
#------------------------------------------------------------------------------
Script=${0##*/}
Template="$OFBOOK_CODE_PROJECT_DIR/etc/codeTemplates/functionObjectTemplate"

# TODO: modify the script so that it takes into account sub-directories

if [ ! -d Make ]
then
    mkdir Make 
    echo "$Script: Creating Make/options"
    $WM_DIR/scripts/makeOptions

    PWD=$(pwd)

    LIB=${PWD##*/}

    echo "LIB = \$(FOAM_USER_LIBBIN)/$LIB" > Make/files
fi

usage() {
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat << USAGE
Usage: $Script [OPTION] <functionObjectType>
options:
  -help             print the usage

* create new standard OpenFOAM source file structure for a function object 
  functionObjectType

USAGE
    exit 1
}

TYPENAME="$1"

case "$1" in
(-h | -help)
    usage
    ;;
(*)

    # Create the function object files. 
    
    echo $TYPENAME
    functionObject=FunctionObject

    for ext in .H .C; do 

        fileName=$TYPENAME$functionObject$ext

        echo "$Script: Creating new file $fileName"

        if [ -e "$fileName" ]
        then
            echo "   Error: file exists"
            exit 1
        fi

        # Process the template file.  
        sed "s/TYPENAME/$TYPENAME/g" $Template$ext > $TYPENAME$ext

    done
       
    echo "$Script: addign files to Make/files"
    sed -i "1i $TYPENAME.C" Make/files

    ;;
esac

#------------------------------------------------------------------------------
